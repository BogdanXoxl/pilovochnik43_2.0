/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type { core, connectionPluginCore } from "nexus";
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(
      fieldName: FieldName,
      opts?: core.CommonInputFieldConfig<TypeName, FieldName>
    ): void; // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(
      fieldName: FieldName,
      ...opts: core.ScalarOutSpread<TypeName, FieldName>
    ): void; // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void;
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {
  ImageType: "PHOTO" | "VIDEO";
}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenObjects {
  Account: {
    // root type
    access_token?: string | null; // String
    expires_at?: number | null; // Int
    id?: string | null; // String
    id_token?: string | null; // String
    provider?: string | null; // String
    providerAccountId?: string | null; // String
    refresh_token?: string | null; // String
    scope?: string | null; // String
    session_state?: string | null; // String
    token_type?: string | null; // String
    type?: string | null; // String
    userId?: string | null; // String
  };
  Category: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    productId?: string | null; // String
    seo_description?: string | null; // String
    seo_title?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  DeliveryType: {
    // root type
    howLong?: string | null; // String
    id?: string | null; // String
    price?: number | null; // Float
    title?: string | null; // String
  };
  Image: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    link?: string | null; // String
    productId?: string | null; // String
    type?: NexusGenEnums["ImageType"] | null; // ImageType
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  Order: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    deliveryTypeId?: string | null; // String
    id?: string | null; // String
    statusId?: string | null; // String
    summary?: number | null; // Float
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
    userId?: string | null; // String
  };
  Product: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    description?: string | null; // String
    discount?: number | null; // Int
    id?: string | null; // String
    price?: number | null; // Float
    seo_description?: string | null; // String
    seo_title?: string | null; // String
    sizes?: Array<string | null> | null; // [String]
    slug?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  ProductOrder: {
    // root type
    amount?: number | null; // Int
    id?: string | null; // String
    orderId?: string | null; // String
    price?: number | null; // Float
    productId?: string | null; // String
  };
  Query: {};
  Review: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    productId?: string | null; // String
    rate?: number | null; // Int
    text?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
    userId?: string | null; // String
  };
  Session: {
    // root type
    expires?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    sessionToken?: string | null; // String
    userId?: string | null; // String
  };
  Status: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    message?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  Tag: {
    // root type
    createdAt?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars["DateTime"] | null; // DateTime
  };
  User: {
    // root type
    email?: string | null; // String
    emailVerified?: NexusGenScalars["DateTime"] | null; // DateTime
    id?: string | null; // String
    image?: string | null; // String
    name?: string | null; // String
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums;

export interface NexusGenFieldTypes {
  Account: {
    // field return type
    access_token: string | null; // String
    expires_at: number | null; // Int
    id: string | null; // String
    id_token: string | null; // String
    provider: string | null; // String
    providerAccountId: string | null; // String
    refresh_token: string | null; // String
    scope: string | null; // String
    session_state: string | null; // String
    token_type: string | null; // String
    type: string | null; // String
    user: NexusGenRootTypes["User"] | null; // User
    userId: string | null; // String
  };
  Category: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    productId: string | null; // String
    products: Array<NexusGenRootTypes["Product"] | null> | null; // [Product]
    seo_description: string | null; // String
    seo_title: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
  };
  DeliveryType: {
    // field return type
    howLong: string | null; // String
    id: string | null; // String
    orders: Array<NexusGenRootTypes["Order"] | null> | null; // [Order]
    price: number | null; // Float
    products: Array<NexusGenRootTypes["Product"] | null> | null; // [Product]
    title: string | null; // String
  };
  Image: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    link: string | null; // String
    product: NexusGenRootTypes["Product"] | null; // Product
    productId: string | null; // String
    type: NexusGenEnums["ImageType"] | null; // ImageType
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
  };
  Order: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    delivery: NexusGenRootTypes["DeliveryType"] | null; // DeliveryType
    deliveryTypeId: string | null; // String
    id: string | null; // String
    products: Array<NexusGenRootTypes["ProductOrder"] | null> | null; // [ProductOrder]
    status: NexusGenRootTypes["Status"] | null; // Status
    statusId: string | null; // String
    summary: number | null; // Float
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
    user: NexusGenRootTypes["User"] | null; // User
    userId: string | null; // String
  };
  Product: {
    // field return type
    categories: Array<NexusGenRootTypes["Category"] | null> | null; // [Category]
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    delivery: Array<NexusGenRootTypes["DeliveryType"] | null> | null; // [DeliveryType]
    description: string | null; // String
    discount: number | null; // Int
    id: string | null; // String
    images: Array<NexusGenRootTypes["Image"] | null> | null; // [Image]
    orders_count: number | null; // Int
    price: number | null; // Float
    rating: number | null; // Float
    reviews: Array<NexusGenRootTypes["Review"] | null> | null; // [Review]
    seo_description: string | null; // String
    seo_title: string | null; // String
    sizes: Array<string | null> | null; // [String]
    slug: string | null; // String
    tags: Array<NexusGenRootTypes["Tag"] | null> | null; // [Tag]
    title: string | null; // String
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
  };
  ProductOrder: {
    // field return type
    amount: number | null; // Int
    id: string | null; // String
    order: NexusGenRootTypes["Order"] | null; // Order
    orderId: string | null; // String
    price: number | null; // Float
    product: NexusGenRootTypes["Product"] | null; // Product
    productId: string | null; // String
  };
  Query: {
    // field return type
    product: NexusGenRootTypes["Product"] | null; // Product
    products: Array<NexusGenRootTypes["Product"] | null> | null; // [Product]
  };
  Review: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    product: NexusGenRootTypes["Product"] | null; // Product
    productId: string | null; // String
    rate: number | null; // Int
    text: string | null; // String
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
    user: NexusGenRootTypes["User"] | null; // User
    userId: string | null; // String
  };
  Session: {
    // field return type
    expires: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    sessionToken: string | null; // String
    user: NexusGenRootTypes["User"] | null; // User
    userId: string | null; // String
  };
  Status: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    message: string | null; // String
    orders: Array<NexusGenRootTypes["Order"] | null> | null; // [Order]
    title: string | null; // String
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
  };
  Tag: {
    // field return type
    createdAt: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    products: Array<NexusGenRootTypes["Product"] | null> | null; // [Product]
    title: string | null; // String
    updatedAt: NexusGenScalars["DateTime"] | null; // DateTime
  };
  User: {
    // field return type
    accounts: Array<NexusGenRootTypes["Account"] | null> | null; // [Account]
    email: string | null; // String
    emailVerified: NexusGenScalars["DateTime"] | null; // DateTime
    id: string | null; // String
    image: string | null; // String
    name: string | null; // String
    orders: Array<NexusGenRootTypes["Order"] | null> | null; // [Order]
    reviews: Array<NexusGenRootTypes["Review"] | null> | null; // [Review]
    sessions: Array<NexusGenRootTypes["Session"] | null> | null; // [Session]
  };
}

export interface NexusGenFieldTypeNames {
  Account: {
    // field return type name
    access_token: "String";
    expires_at: "Int";
    id: "String";
    id_token: "String";
    provider: "String";
    providerAccountId: "String";
    refresh_token: "String";
    scope: "String";
    session_state: "String";
    token_type: "String";
    type: "String";
    user: "User";
    userId: "String";
  };
  Category: {
    // field return type name
    createdAt: "DateTime";
    id: "String";
    productId: "String";
    products: "Product";
    seo_description: "String";
    seo_title: "String";
    title: "String";
    updatedAt: "DateTime";
  };
  DeliveryType: {
    // field return type name
    howLong: "String";
    id: "String";
    orders: "Order";
    price: "Float";
    products: "Product";
    title: "String";
  };
  Image: {
    // field return type name
    createdAt: "DateTime";
    id: "String";
    link: "String";
    product: "Product";
    productId: "String";
    type: "ImageType";
    updatedAt: "DateTime";
  };
  Order: {
    // field return type name
    createdAt: "DateTime";
    delivery: "DeliveryType";
    deliveryTypeId: "String";
    id: "String";
    products: "ProductOrder";
    status: "Status";
    statusId: "String";
    summary: "Float";
    updatedAt: "DateTime";
    user: "User";
    userId: "String";
  };
  Product: {
    // field return type name
    categories: "Category";
    createdAt: "DateTime";
    delivery: "DeliveryType";
    description: "String";
    discount: "Int";
    id: "String";
    images: "Image";
    orders_count: "Int";
    price: "Float";
    rating: "Float";
    reviews: "Review";
    seo_description: "String";
    seo_title: "String";
    sizes: "String";
    slug: "String";
    tags: "Tag";
    title: "String";
    updatedAt: "DateTime";
  };
  ProductOrder: {
    // field return type name
    amount: "Int";
    id: "String";
    order: "Order";
    orderId: "String";
    price: "Float";
    product: "Product";
    productId: "String";
  };
  Query: {
    // field return type name
    product: "Product";
    products: "Product";
  };
  Review: {
    // field return type name
    createdAt: "DateTime";
    id: "String";
    product: "Product";
    productId: "String";
    rate: "Int";
    text: "String";
    updatedAt: "DateTime";
    user: "User";
    userId: "String";
  };
  Session: {
    // field return type name
    expires: "DateTime";
    id: "String";
    sessionToken: "String";
    user: "User";
    userId: "String";
  };
  Status: {
    // field return type name
    createdAt: "DateTime";
    id: "String";
    message: "String";
    orders: "Order";
    title: "String";
    updatedAt: "DateTime";
  };
  Tag: {
    // field return type name
    createdAt: "DateTime";
    id: "String";
    products: "Product";
    title: "String";
    updatedAt: "DateTime";
  };
  User: {
    // field return type name
    accounts: "Account";
    email: "String";
    emailVerified: "DateTime";
    id: "String";
    image: "String";
    name: "String";
    orders: "Order";
    reviews: "Review";
    sessions: "Session";
  };
}

export interface NexusGenArgTypes {
  Query: {
    product: {
      // args
      productId: string; // String!
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes:
    | NexusGenTypes["inputNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["scalarNames"];
  allOutputTypes:
    | NexusGenTypes["objectNames"]
    | NexusGenTypes["enumNames"]
    | NexusGenTypes["unionNames"]
    | NexusGenTypes["interfaceNames"]
    | NexusGenTypes["scalarNames"];
  allNamedTypes: NexusGenTypes["allInputTypes"] | NexusGenTypes["allOutputTypes"];
  abstractTypes: NexusGenTypes["interfaceNames"] | NexusGenTypes["unionNames"];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
