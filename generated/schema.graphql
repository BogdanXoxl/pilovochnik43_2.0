### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Account {
  access_token: String
  expires_at: Int
  id: String
  id_token: String
  provider: String
  providerAccountId: String
  refresh_token: String
  scope: String
  session_state: String
  token_type: String
  type: String
  user: User
  userId: String
}

type Category {
  createdAt: DateTime
  id: String
  productId: String
  products: [Product]
  seo_description: String
  seo_title: String
  title: String
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type DeliveryType {
  howLong: String
  id: String
  orders: [Order]
  price: Float
  products: [Product]
  title: String
}

type Image {
  createdAt: DateTime
  id: String
  link: String
  product: Product
  productId: String
  type: ImageType
  updatedAt: DateTime
}

enum ImageType {
  PHOTO
  VIDEO
}

type Order {
  createdAt: DateTime
  delivery: DeliveryType
  deliveryTypeId: String
  id: String
  products: [ProductOrder]
  status: Status
  statusId: String
  summary: Float
  updatedAt: DateTime
  user: User
  userId: String
}

type Product {
  categories: [Category]
  createdAt: DateTime
  delivery: [DeliveryType]
  description: String
  discount: Int
  id: String
  images: [Image]
  orders_count: Int
  price: Float
  rating: Float
  reviews: [Review]
  seo_description: String
  seo_title: String
  sizes: [String]
  slug: String
  tags: [Tag]
  title: String
  updatedAt: DateTime
}

type ProductOrder {
  amount: Int
  id: String
  order: Order
  orderId: String
  price: Float
  product: Product
  productId: String
}

type Query {
  product(productId: String!): Product
  products: [Product]
}

type Review {
  createdAt: DateTime
  id: String
  product: Product
  productId: String
  rate: Int
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

type Session {
  expires: DateTime
  id: String
  sessionToken: String
  user: User
  userId: String
}

type Status {
  createdAt: DateTime
  id: String
  message: String
  orders: [Order]
  title: String
  updatedAt: DateTime
}

type Tag {
  createdAt: DateTime
  id: String
  products: [Product]
  title: String
  updatedAt: DateTime
}

type User {
  accounts: [Account]
  email: String
  emailVerified: DateTime
  id: String
  image: String
  name: String
  orders: [Order]
  reviews: [Review]
  sessions: [Session]
}
